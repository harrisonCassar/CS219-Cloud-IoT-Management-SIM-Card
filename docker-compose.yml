version: "3.9"

# Adapted from:
# - https://docs.docker.com/compose/gettingstarted/
# - https://github.com/docker/awesome-compose

################################################
# SERVICES
################################################

services:
  flask_server:
    image: flask_server
    container_name: flask_server
    build:
      context: .
      dockerfile: ./flask_server/Dockerfile
    # flask requires SIGINT to stop gracefully
    # (default stop signal from Compose is SIGTERM)
    stop_signal: SIGINT
    ports:
      - '8000:8000'

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    ports:
        - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 500

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  # grafana:
  #   image: grafana/grafana-oss # older stable version: grafana/grafana-enterprise:8.2.0
  #   container_name: grafana
  #   restart: always
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - grafana-volume:/var/lib/grafana
  #     - ./flask_server/config/grafana.ini:/etc/grafana/grafana.ini
  #     #- ./grafana/dashboards/:/var/lib/grafana/dashboards/

  udp_server:
    image: udp_server
    container_name: udp_server
    build:
      context: .
      dockerfile: ./udp_server/Dockerfile
    ports:
      - '6001:6001/udp'

  modem_mock:
    image: modem_mock
    container_name: modem_mock
    build:
      context: .
      dockerfile: ./test/modem_mock/Dockerfile
    ports:
      - '6002:6002/udp'

################################################
# VOLUMES
################################################

# volumes:
#     grafana-volume:
#         external: false